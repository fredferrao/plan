#compdef dev

_dev() {
    local curcontext="$curcontext" state line
    typeset -A opt_args
    
    # Fairly hacky. We know that _dev is linked to this script inside
    # of the dev repository. We use this to figure out where famly-dev
    # was cloned and switch to that directory.
    local dev_home="$(dirname $(readlink /usr/local/share/zsh/site-functions/_dev))/.."

    source "${dev_home}/scripts/lib/functional.sh"
    source "${dev_home}/scripts/lib/path.sh"

    local commands=$(ls "${dev_home}"/scripts | grep .sh \
    | while read -r path; do echo $(path_basename ${path}) ; done \
    | while read -r service; do [[ ${service} == "dev" ]] || echo ${service} ; done)

    _arguments \
        "1: :->command"\
        "*: :->arguments"

    case $state in
        command)
            _arguments "1: :($commands help)"
        ;;
        *)
            command=$words[2]
            if contains "$command" "$commands"
            then
                # Each script expects to execute in the context of famly-dev. We switch to that
                # directory in a subshell ot avoid annoying the user.
                compadd "$@" $(cd "${dev_home}" && "./scripts/${command}.sh" completions $words[3])
            elif [[ "${command}" == "help" ]]
            then
                compadd "$@" "$commands"
            fi
            # This is intentially left blank. We don't want to fallback to
            # file-system completions.
            ;;
    esac
}

_dev "%@"
